# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build Windows EXE

on:
  #workflow_dispatch:   # déclenchement manuel possible
  push:
    tags:
      - "v*.*.*"
jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"   # adapte si nécessaire

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install UPX
        run: |
          curl -L -o upx.zip https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-win64.zip
          tar -xf upx.zip
          echo "${{ github.workspace }}\upx-4.2.4-win64" >> $env:GITHUB_PATH

      - name: Install dependencies & versionning
        run: |
          uv sync --dev
          uv version ${{github.ref_name}}
          uv run .github/workflows/update_version.py ${{github.ref_name}}
          uv build

      - name: Build EXE with pyinstaller
        run: uv run buildWinExe.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: reqman-windows-exe
          path: dist/*.exe

      - name: Check if release exists
        id: check_release
        shell: bash
        run: |
          if gh release view "${GITHUB_REF_NAME}" > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: steps.check_release.outputs.exists == 'false'
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          files: dist/reqman-*.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      # - name: Upload Release Asset
      #   uses: actions/upload-release-asset@v1
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./dist/reqman-*.exe 
      #     asset_name: reqman-${{ github.ref_name }}.exe          
      #     asset_content_type: application/octet-stream